{"version":3,"sources":["RouteExplorer.js","polyfills.js","controllers/AppController.js","controllers/GraphsController.js","controllers/HeatMapController.js","controllers/RouteDetailsController.js","controllers/SelectRoutesController.js","controllers/SelectStopsController.js","controllers/TimesDetailsController.js","directives/PercentBar.js","directives/TimesDetails.js","filters/duration.js","services/Layout.js","services/Locale.js","services/LocationBinder.js","services/TimeParser.js"],"names":["app","angular","module","constant","baseDir","config","$routeProvider","env","templateUrl","templateName","when","pageId","controller","resolve","reloadOnSearch","otherwise","redirectTo","String","prototype","repeat","count","TypeError","str","RangeError","Infinity","Math","floor","length","rpt","$scope","$location","share","prefix","url","encodeURIComponent","window","open","$on","e","route","bodyClass","value","name","values","$http","$q","$timeout","Layout","daysTable","hoursList","monthNames","scope","wip","input","graphKind","refresh","startStop","endStop","startDate","endDate","search","id","stops","getStops","stopsById","forEach","st","cbs","get","params","from_date","to_date","from_stop","to_stop","then","resp","stat","data","table","fromToStopsIds","fromToStops","map","stop_id","all","updateChart","getRouteTitle","from","to","initData","buildDates","s","startDates","endDates","push","ns","computePerDaySeries","perDay","key","week_day_local","num_trips","arrival_late_count","result","d","entry","y","numTrips","console","log","lineName","computePerHoursSeries","perHour","hoursMapping","h","hour_key","hour_local","hl","stopNames","idx","perDaySeries","perHoursSeries","tooltip","formatter","prec","round","x","point","useHTML","series","chartPerDay","options","chart","type","title","text","xAxis","reversed","categories","yAxis","opposite","chartPerHour","findDate","dates","i","findStop","ta","extend","defaults","scrollWheelZoom","center","lat","latlon","lng","zoom","stop","paths","heatmapData","score","latlng","g","color","message","fillColor","fillOpacity","stroke","radius","latlngs","popupOptions","className","$route","LocationBinder","Locale","TimeParser","routeParams","current","period","parsePeriod","createRequestString","end","routeId","stopIds","findRoute","statsMap","loaded","origin","destination","selectedPeriod","formatMonth","selectedDay","days","selectedTime","times","selectRouteUrl","previousPeriod","offsetPeriod","nextPeriod","bounds","getRoutesDateRange","day","previousPeriodUrl","min","getTime","formatPeriod","nextPeriodUrl","max","route_id","success","loadStats","bind","val","Number","stopStats","stopId","stats","selectedStats","stopName","isDayEmpty","dayId","dayTimes","time","info","isTimeEmpty","timeId","timeStats","tripCount","getStats","timesMap","statGroup","hours","week_day","formatHour","hour","slice","date","months","getMonth","getFullYear","offsetMonth","offset","Date","setMonth","size","graphsUrlParams","graphsUrl","join","findRoutesByPeriod","routes","collapseRoutes","isCollapsed","isArray","isOrigin","isDestination","stopText","stopTooltip","barWidth","percentWidth","routeUrl","collapsibleStops","findCommonStops","countStopFrequencies","routeIndex","collapseStops","stopFrequencies","routesCount","commonStops","collapsed","accumulator","$rootScope","dateRange","periods","generatePeriods","startPeriod","endPeriod","formValid","goToRoutes","noRoutes","loading","fromDate","toDate","periodStr","path","finally","dismissError","start","getDate","toName","until","reverse","layout","parseInt","directive","restrict","filter","seconds","negative","trunc","minutes","res","factory","self","stopsMap","routesMap","loadedPromise","response","heb_stop_names","names","r","stop_ids","minDate","min_date","maxDate","max_date","reduce","m","findStopName","findRoutes","originId","destinationId","matchingRoutes","originIndex","indexOf","destinationIndex","routeStops","Object","keys","sort","r1","r2","defer","routesInDate","reject","promise","service","getRoutes","v","abbr","scopeProperty","locationProperty","parser","$watch","sep","dd","toString","mm","yyyy","parseMonth","monthString","year","substr","month","periodString","parts","split","f"],"mappings":"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","file":"app.js","sourcesContent":["(function () {\n    var app = angular.module('RouteExplorer', ['ngRoute',\n        'ui.bootstrap',\n        'ui.bootstrap.buttons',\n        'leaflet-directive',\n        \"highcharts-ng\"\n    ]);\n\n    app.constant('env', {\n        baseDir: '/static/ui/RouteExplorer'\n    });\n\n    app.config(['$routeProvider','env',\n        function ($routeProvider, env) {\n\n            var templateUrl = function (templateName) {\n                return env.baseDir + '/tpls/' + templateName + '.html';\n            };\n\n            $routeProvider\n                .when('/', {\n                    pageId: 'welcome',\n                    templateUrl: templateUrl('SelectStops'),\n                    controller: 'SelectStopsController',\n                    resolve: {'Layout': 'Layout'}\n                })\n                .when('/about', {\n                    pageId: 'about',\n                    templateUrl: templateUrl('About')\n                })\n                .when('/:period/select-route/:origin/:destination', {\n                    pageId: 'routes',\n                    templateUrl: templateUrl('SelectRoute'),\n                    controller: 'SelectRouteController',\n                    resolve: {'Layout': 'Layout'},\n                    reloadOnSearch: false\n                })\n                .when('/:period/routes/:routeId', {\n                    pageId: 'route',\n                    templateUrl: templateUrl('RouteDetails'),\n                    controller: 'RouteDetailsController',\n                    resolve: {'Layout': 'Layout'},\n                    reloadOnSearch: false\n                }).when(\"/heat-map\", {\n                    pageId: 'heatMap',\n                    templateUrl: templateUrl('HeatMap'),\n                    controller: 'HeatMapController',\n                    reloadOnSearch: false,\n                    resolve: {'Layout': 'Layout'},\n                }).when(\"/graphs\", {\n                    pageId: 'graphs',\n                    templateUrl: templateUrl('Graphs'),\n                    controller: 'GraphsController',\n                    reloadOnSearch: false,\n                    resolve: {'Layout': 'Layout'},\n                })\n                .otherwise({\n                    redirectTo: '/'\n                });\n        }]);\n})();\n","// String.repeat polyfill\n// taken from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat#Polyfill\nif (!String.prototype.repeat) {\n  String.prototype.repeat = function(count) {\n    'use strict';\n    if (this === null) {\n      throw new TypeError('can\\'t convert ' + this + ' to object');\n    }\n    var str = '' + this;\n    count = +count;\n    if (count != count) {\n      count = 0;\n    }\n    if (count < 0) {\n      throw new RangeError('repeat count must be non-negative');\n    }\n    if (count == Infinity) {\n      throw new RangeError('repeat count must be less than infinity');\n    }\n    count = Math.floor(count);\n    if (str.length === 0 || count === 0) {\n      return '';\n    }\n    // Ensuring count is a 31-bit integer allows us to heavily optimize the\n    // main part. But anyway, most current (August 2014) browsers can't handle\n    // strings 1 << 28 chars or longer, so:\n    if (str.length * count >= 1 << 28) {\n      throw new RangeError('repeat count must not overflow maximum string size');\n    }\n    var rpt = '';\n    for (;;) {\n      if ((count & 1) == 1) {\n        rpt += str;\n      }\n      count >>>= 1;\n      if (count === 0) {\n        break;\n      }\n      str += str;\n    }\n    return rpt;\n  };\n}\n","angular.module('RouteExplorer').controller('AppController',\n['$scope', '$location',\nfunction($scope, $location) {\n    $scope.share = function(prefix) {\n        var url = prefix + encodeURIComponent('http://otrain.org/#' + $location.url());\n        window.open(url, 'sharePopup', 'width=600,height=550,top=100,left=100,location=no,scrollbar=no,status=no,menubar=no');\n    };\n\n    $scope.$on('$routeChangeSuccess', function(e, route) {\n        $scope.bodyClass = route.pageId ? 'rex-page-' + route.pageId : null;\n    });\n}]);\n","'use strict';\nangular.module('RouteExplorer').constant('daysTable',\n    [{\n        value: 0,\n        name: 'ראשון',\n    }, {\n        value: 1,\n        name: 'שני',\n    }, {\n        value: 2,\n        name: 'שלישי',\n    }, {\n        value: 3,\n        name: 'רביעי',\n    }, {\n        value: 4,\n        name: 'חמישי',\n    }, {\n        value: 5,\n        name: 'שישי',\n    }, {\n        value: 6,\n        name: 'שבת',\n    }])\n    //}], {\n    //    value: 'all',\n    //    name: 'שבועי'\n    //}\n    //])\n    .constant(\"monthNames\", [\n        'dummy',\n        'ינואר',\n        'פברואר',\n        'מרץ',\n        'אפריל',\n        'מאי',\n        'יוני',\n        'יולי',\n        'אוגוסט',\n        'ספטמבר',\n        'אוקטובר',\n        'נובמבר',\n        'דצמבר'\n    ]).constant(\"hoursList\", [\n    {\n        name: '4-7',\n        values: [4, 5, 6]\n    },\n    {\n        name: '7-9',\n        values: [7, 8]\n    },\n    {\n        name: '9-12',\n        values: [9,10,11],\n    },\n    {\n        name: '12-15',\n        values: [12,13,14],\n    },\n    {\n        name: '15-18',\n        values: [15,16,17],\n    },\n    {\n        name: '18-21',\n        values: [18, 19,20],\n    },\n    {\n        name: '21-24',\n        values: [21, 22,23],\n    },\n    {\n        name: '24-4',\n        values: [0, 1, 2, 3],\n    }\n]\n);\n\n\nangular.module('RouteExplorer').controller('GraphsController',\n    ['$scope', '$http', '$q', '$timeout', '$location', 'Layout', 'daysTable', 'hoursList', 'monthNames',\n        function ($scope,\n                  $http,\n                  $q,\n                  $timeout,\n                  $location,\n                  Layout,\n                  daysTable,\n                  hoursList,\n                  monthNames) {\n            window.scope = $scope;\n            $scope.wip = true;\n            $scope.Layout = Layout;\n            $scope.input = {\n                graphKind: 'perDay'\n            };\n            $scope.refresh = function () {\n                $scope.wip = true;\n                $scope.startStop = $scope.input.startStop;\n                $scope.endStop = $scope.input.endStop;\n                $scope.startDate = $scope.input.startDate.value;\n                $scope.endDate = $scope.input.endDate.value;\n                $location.search({\n                    startStop: $scope.startStop.id,\n                    endStop: $scope.endStop.id,\n                    startDate: $scope.startDate,\n                    endDate: $scope.endDate,\n                });\n                $scope.stops = Layout.getStops();\n                $scope.stopsById = {};\n                $scope.stops.forEach(function (st) {\n                    $scope.stopsById[st.id] = st;\n                });\n                var cbs = [\n                    $http.get('/api/v1/stats/from-to-full/', {\n                        params: {\n                            from_date: $scope.startDate,\n                            to_date: $scope.endDate,\n                            from_stop: $scope.startStop.id,\n                            to_stop: $scope.endStop.id,\n                        }\n                    }).then(function (resp) {\n                        $scope.stat = resp.data.table;\n                    }),\n                    $http.get('/api/v1/stops/from-to/', {\n                        params: {\n                            from_stop: $scope.startStop.id,\n                            to_stop: $scope.endStop.id,\n                        }\n                    }).then(function (resp) {\n                        $scope.fromToStopsIds = resp.data;\n                        $scope.fromToStops = $scope.fromToStopsIds.map(function (stop_id) {\n                            return $scope.stopsById[stop_id];\n                        });\n                    })\n                ];\n                $q.all(cbs).then(function () {\n                    $scope.wip = false;\n                    $scope.updateChart();\n                });\n            };\n            $scope.getRouteTitle = function (route) {\n                return 'מ' + route.from + ' ל' + route.to + ' (' + route.count + ' ' + 'נסיעות' + ')';\n            }\n\n            $scope.initData = function () {\n                $scope.buildDates();\n            };\n\n            $scope.buildDates = function () {\n                var s = [1, 2015];\n                var e = [5, 2016];\n                $scope.startDates = [];\n                $scope.endDates = [];\n                while (s[0] != e[0] || s[1] != e[1]) {\n                    $scope.startDates.push({\n                        name: monthNames[s[0]] + ' ' + s[1],\n                        value: '1-' + s[0] + '-' + s[1],\n                    });\n                    var ns = s[0] == 12 ? [1, s[1] + 1] : [s[0] + 1, s[1]];\n                    $scope.endDates.push({\n                        name: monthNames[s[0]] + ' ' + s[1],\n                        value: '1-' + ns[0] + '-' + ns[1],\n                    });\n                    s[0] = s[0] + 1;\n                    if (s[0] > 12) {\n                        s[0] = 1;\n                        s[1]++;\n                    }\n                }\n            };\n            $scope.computePerDaySeries = function () {\n                var perDay = {};\n                $scope.stat.forEach(function (st) {\n                    var key = st.stop_id + '-' + st.week_day_local;\n                    perDay[key] = perDay[key] || {\n                            num_trips: 0,\n                            arrival_late_count: 0\n                        };\n                    perDay[key].num_trips += st.num_trips;\n                    perDay[key].arrival_late_count += st.arrival_late_count;\n\n                });\n                var result = [];\n                daysTable.forEach(function (d) {\n                    var data = $scope.fromToStops.map(function (st) {\n                        var entry = perDay[st.id + '-' + d.value];\n                        var result = {};\n                        if (!entry) {\n                            result.y = 0;\n                            result.numTrips = 0;\n                            console.log('no entry for ' + st.id + ' ' + d.value);\n                        } else {\n                            result.y = entry.arrival_late_count * 100.0 / entry.num_trips;\n                            result.numTrips = entry.num_trips;\n                        }\n                        result.lineName = d.name;\n                        return result;\n                    });\n                    result.push({\n                        name: d.name,\n                        data: data\n                    })\n                });\n                return result;\n            };\n            $scope.computePerHoursSeries = function () {\n                var perHour = {};\n                var hoursMapping = {}\n                hoursList.forEach(function(e) {\n                    e.values.forEach(function(h) {\n                        hoursMapping[h] = e;\n                    })\n                });\n                $scope.stat.forEach(function (st) {\n                    var hour_key = hoursMapping[st.hour_local].name;\n                    var key = st.stop_id + '-' + hour_key;\n                    perHour[key] = perHour[key] || {\n                            num_trips: 0,\n                            arrival_late_count: 0\n                        };\n                    perHour[key].num_trips += st.num_trips;\n                    perHour[key].arrival_late_count += st.arrival_late_count;\n\n                });\n                var result = [];\n                hoursList.forEach(function (hl) {\n                    var data = $scope.fromToStops.map(function (st) {\n                        var entry = perHour[st.id + '-' + hl.name];\n                        var result = {};\n                        if (!entry) {\n                            console.log('no entry for ' + st.id + ' ' + hl.name);\n                            result.y = 0;\n                            result.numTrips = 0;\n                        } else {\n                            result.y = entry.arrival_late_count * 100.0 / entry.num_trips;\n                            result.numTrips = entry.num_trips;\n                        }\n                        result.lineName = hl.name;\n                        return result;\n                    });\n                    result.push({\n                        name: hl.name,\n                        data: data\n                    })\n                });\n                return result;\n            }\n            $scope.updateChart = function () {\n                var stopNames = $scope.fromToStops.map(function (st, idx) {\n                    return st.name + ' - ' + (idx + 1);\n                });\n                $scope.perDaySeries = $scope.computePerDaySeries();\n                $scope.perHoursSeries = $scope.computePerHoursSeries();\n\n                var tooltip = {\n                    formatter: function () {\n                        var prec = Math.round(this.y * 100) / 100;\n                        console.log(this);\n                        return '<span dir=\"rtl\"><b>' + this.x + '</b>' + '<br/>' +\n                                '<span>' + this.point.lineName + '</span><br/>' +\n                            '<span>רכבות מאחרות:</span>' + prec + '%' + '<br/>' +\n                            '<span>מספר רכבות: </span>' + this.point.numTrips +\n                            '</span>';\n                    },\n                    useHTML: true,\n                };\n                var series = [\n                    {\n                        name: '123',\n                        data: [10, 20, 5, 5, 5, 10, 20, 30, 15, 15, 15]\n                    },\n                    {\n                        name: '456',\n                        data: [8, 8, 8, 12, 7, 20]\n                    },\n                ]\n                $scope.chartPerDay = {\n                    options: {\n                        chart: {\n                            type: 'line'\n                        },\n                        title: {\n                            text: 'איחור בחתך יומי'\n                        },\n                        tooltip: tooltip,\n                    },\n                    xAxis: {\n                        reversed: true,\n                        categories: stopNames,\n                        useHTML: true,\n                    },\n                    yAxis: {\n                        opposite: true,\n                        useHTML: true,\n                        title: {\n                            text: 'אחוזי איחור'\n                        }\n                    },\n                    series: $scope.perDaySeries,\n                };\n                $scope.chartPerHour = {\n                    options: {\n                        chart: {\n                            type: 'line'\n                        },\n                        title: {\n                            text: 'אישור בחתך שעתי'\n                        },\n                        tooltip: tooltip,\n                    },\n                    yAxis: {\n                        useHTML: true,\n                        opposite: true,\n                        title: {\n                            text: 'אחוזי איחור'\n                        }\n                    },\n                    xAxis: {\n                        useHTML: true,\n                        reversed: true,\n                        categories: stopNames,\n                    },\n                    tooltip: {\n                        useHTML: true\n                    },\n                    series: $scope.perHoursSeries,\n                };\n            };\n            $scope.findDate = function (dates, value) {\n                for (var i = 0; i < dates.length; i++) {\n                    if (dates[i].value == value) {\n                        return dates[i];\n                    }\n                }\n                return null;\n            };\n\n            $scope.initData();\n\n            var params = $location.search();\n            $scope.input.startDate = $scope.findDate($scope.startDates, params.startDate) || $scope.startDates[$scope.startDates.length - 1];\n            $scope.input.endDate = $scope.findDate($scope.endDates, params.endDate) || $scope.endDates[$scope.endDates.length - 1];\n            $scope.input.startStop = Layout.findStop(params.startStop || 400);\n            $scope.input.endStop = Layout.findStop(params.endStop|| 3700)\n            $scope.refresh();\n        }]);\n\n\n\n\n\n","angular.module('RouteExplorer').controller('HeatMapController',\n    ['$scope', '$http', 'Layout', function ($scope, $http, Layout) {\n        $scope.Layout = Layout;\n        var ta = $scope.Layout.findStop(4600); // TA HASHALOM\n        console.log(ta);\n        angular.extend($scope, {\n            defaults: {\n                scrollWheelZoom: false\n            },\n            center: {\n                lat: ta.latlon[0],\n                lng: ta.latlon[1],\n                zoom: 10,\n            }\n        });\n        $scope.stops = Layout.getStops();\n        $scope.input = {\n            stop: $scope.stops[0]\n        }\n        $scope.paths = [];\n        $http.get('/api/v1/heat-map/').then(function (resp) {\n            $scope.heatmapData = resp.data;\n            //var maxScore = 0;\n            //var minScore = 1;\n\n            //$scope.heatmapData.forEach(function(score) {\n            //    maxScore = Math.max(score.score, maxScore);\n            //    minScore = Math.min(score.score, minScore);\n            //});\n\n            $scope.heatmapData.forEach(function (score) {\n                var latlng = $scope.Layout.findStop(score.stop_id).latlon;\n                var g = 255-Math.floor(255 * score.score);\n                var color = 'rgb(255,' + g + ',0)';\n                var message = $scope.Layout.findStop(score.stop_id).name + '<br/>' + Math.floor(score.score * 100) / 100;\n                $scope.paths.push({\n                    color: color,\n                    fillColor: color,\n                    fillOpacity: 1,\n                    type: \"circleMarker\",\n                    stroke: false,\n                    radius: 10,\n                    latlngs: latlng,\n                    message: message,\n                    popupOptions: {\n                        className: 'ot-popup'\n                    }\n                });\n            });\n        });\n\n    }]);\n\n\n","angular.module('RouteExplorer').controller('RouteDetailsController',\n['$scope', '$route', '$http', '$location', 'LocationBinder', 'Layout', 'Locale', 'TimeParser',\nfunction($scope, $route, $http, $location, LocationBinder, Layout, Locale, TimeParser) {\n    var routeParams = $route.current.params;\n\n    var period = TimeParser.parsePeriod(routeParams.period);\n    var startDate = TimeParser.createRequestString(period.from);\n    var endDate = TimeParser.createRequestString(period.end);\n\n    var routeId = routeParams.routeId;\n    var stopIds = Layout.findRoute(routeId).stops;\n    var statsMap = {};\n\n    $scope.loaded = false;\n    $scope.stopIds = stopIds;\n    $scope.origin = stopIds[0];\n    $scope.destination = stopIds[stopIds.length - 1];\n\n    $scope.selectedPeriod = formatMonth(period.from);\n    if (period.to > period.from) {\n        $scope.selectedPeriod += \" \\u2014 \" + formatMonth(period.to)\n    }\n\n    $scope.selectedDay = null;\n    $scope.days = Locale.days;\n\n    $scope.selectedTime = null;\n    $scope.times = [];\n\n    $scope.selectRouteUrl = '#/' + routeParams.period + '/select-route/' + $scope.origin + '/' + $scope.destination;\n\n    var previousPeriod = offsetPeriod(period, -1);\n    var nextPeriod = offsetPeriod(period, +1);\n    var bounds = Layout.getRoutesDateRange();\n    var day = 10 * 24 * 60 * 60 * 1000;\n    $scope.previousPeriodUrl = bounds.min.getTime() - day < previousPeriod.from.getTime() ? '#/' + TimeParser.formatPeriod(previousPeriod) + '/routes/' + routeId : null;\n    $scope.nextPeriodUrl = bounds.max > nextPeriod.to ? '#/' + TimeParser.formatPeriod(nextPeriod) + '/routes/' + routeId : null;\n\n    $http.get('/api/v1/stats/route-info-full', { params: { route_id: routeId, from_date: startDate, to_date: endDate } })\n        .success(function(data) {\n            loadStats(data);\n            $scope.loaded = true;\n        });\n\n    LocationBinder.bind($scope, 'selectedDay', 'day', function(val) { return val ? Number(val) : null; });\n    LocationBinder.bind($scope, 'selectedTime', 'time');\n\n    $scope.stopStats = function(stopId) {\n        var stats = selectedStats();\n        for (var i in stats) {\n            if (stats[i].stop_id == stopId)\n                return stats[i];\n        }\n        return null;\n    };\n\n    $scope.stopName = function(stopId) {\n        var stop = Layout.findStop(stopId);\n        if (!stop)\n            return null;\n\n            return stop.name;\n    };\n\n    $scope.isDayEmpty = function(day) {\n        var dayId = day.id;\n        var dayTimes = statsMap[dayId];\n\n        if (!dayTimes)\n            return true;\n\n        for (var time in dayTimes)\n            if (dayTimes[time].info.num_trips > 0)\n                return false;\n\n        return true;\n    };\n\n    $scope.isTimeEmpty = function(time) {\n        var dayId = $scope.selectedDay || 'all';\n        var timeId = time.id;\n\n        var timeStats = statsMap[dayId] && statsMap[dayId][timeId];\n        if (timeStats && timeStats.info.num_trips > 0)\n            return false;\n\n        return true;\n    };\n\n    $scope.tripCount = function(dayId, timeId) {\n      var stats = getStats(dayId, timeId);\n      if (!stats)\n        return 0;\n\n      return stats.info.num_trips;\n    };\n\n    function getStats(dayId, timeId) {\n      dayId = dayId || 'all';\n      timeId = timeId || 'all';\n      return statsMap[dayId] && statsMap[dayId][timeId] ? statsMap[dayId][timeId] : null;\n    }\n\n    function selectedStats() {\n        var stats = getStats($scope.selectedDay, $scope.selectedTime);\n        if (stats)\n          return stats.stops;\n\n        return [];\n    }\n\n    function loadStats(data) {\n        $scope.times = [];\n        var timesMap = {};\n\n        for (var i in data) {\n            var statGroup = data[i];\n            var timeId = statGroup.info.hours == 'all' ? 'all' : statGroup.info.hours[0] + '-' + statGroup.info.hours[1];\n            var dayId = statGroup.info.week_day;\n\n            if (!statsMap[dayId])\n                statsMap[dayId] = {};\n\n            statsMap[dayId][timeId] = statGroup;\n\n            if (timeId != 'all' && !timesMap[timeId]) {\n                var time = {\n                    id: timeId,\n                    from: formatHour(statGroup.info.hours[0]),\n                    to: formatHour(statGroup.info.hours[1])\n                };\n                timesMap[timeId] = time;\n                $scope.times.push(time);\n            }\n        }\n    }\n\n    function formatHour(hour) {\n        return ('0' + hour % 24 + '').slice(-2) + ':00';\n    }\n\n    function formatMonth(date) {\n        return Locale.months[date.getMonth()].name + ' ' + date.getFullYear()\n    }\n\n    function offsetMonth(date, offset) {\n        var d = new Date(date);\n        d.setMonth(d.getMonth() + offset);\n        return d;\n    }\n\n    function offsetPeriod(period, offset) {\n        var size =\n            (period.to.getFullYear() - period.from.getFullYear()) * 12 +\n            period.to.getMonth() - period.from.getMonth() + 1;\n\n        return {\n            from: offsetMonth(period.from, size * offset),\n            to: offsetMonth(period.to, size * offset),\n            end: offsetMonth(period.end, size * offset)\n        };\n    }\n}]);\n","angular.module('RouteExplorer').controller('SelectRouteController',\n['$scope', '$http', '$location', '$route', 'Layout', 'TimeParser',\nfunction($scope, $http, $location, $route, Layout, TimeParser) {\n    $scope.stops = Layout.getStops();\n    var period = TimeParser.parsePeriod($route.current.params.period);\n    var origin = Layout.findStop($route.current.params.origin);\n    var destination = Layout.findStop($route.current.params.destination);\n\n    var graphsUrlParams = [\n        'startStop=' + origin.id,\n        'endStop=' + destination.id,\n        'startDate='+TimeParser.createRequestString(period.from,'-'),\n        'endDate='+TimeParser.createRequestString(period.end,'-'),\n    ];\n    $scope.graphsUrl = \"#/graphs?\" + graphsUrlParams.join(\"&\");\n\n    $http.get('/api/v1/stats/path-info-full/', { params: {\n        origin: origin.id,\n        destination: destination.id,\n        from_date: TimeParser.createRequestString(period.from),\n        to_date: TimeParser.createRequestString(period.end) }\n    }).success(function(data) {\n            loadStats(data);\n            $scope.loaded = true;\n    });\n\n    var statsMap = {};\n\n    function formatMonth(date) {\n        return Locale.months[date.getMonth()].name + ' ' + date.getFullYear()\n    }\n\n    function formatHour(hour) {\n        return ('0' + hour % 24 + '').slice(-2) + ':00';\n    }\n\n\n    function loadStats(data) {\n        $scope.stats = data;\n    }\n\n    Layout.findRoutesByPeriod(origin.id, destination.id, period.from, period.end).then(function(routes) {\n        if (routes.length > 1)\n            collapseRoutes(routes);\n        $scope.routes = routes;\n\n    });\n\n    function stopName(stopId) {\n        var stop = Layout.findStop(stopId);\n        if (!stop)\n            return null;\n\n        return stop.name;\n    }\n\n    $scope.isCollapsed = function(value) {\n        return angular.isArray(value);\n    };\n\n    $scope.isOrigin = function(stopId) {\n        return stopId == origin.id;\n    };\n\n    $scope.isDestination = function(stopId) {\n        return stopId == destination.id;\n    };\n\n    $scope.stopText = function(stopId) {\n        if ($scope.isCollapsed(stopId))\n            return \"\\u2022\".repeat(stopId.length);\n\n        return stopName(stopId);\n    };\n\n    $scope.stopTooltip = function(stopId) {\n        if (!$scope.isCollapsed(stopId))\n            return null;\n\n        return stopId.map(stopName).join(\", \");\n    };\n\n    $scope.barWidth = function(route) {\n        var percentWidth = route.count * 100.0 / $scope.routes[0].count;\n\n        if (percentWidth < 1.0)\n            return \"1px\";\n\n        return percentWidth + \"%\";\n    };\n\n    $scope.routeUrl = function(route) {\n        return '/#/' + $route.current.params.period + '/routes/' + route.id;\n    };\n\n    function collapseRoutes(routes) {\n        var collapsibleStops = findCommonStops(countStopFrequencies(routes), routes.length);\n        delete collapsibleStops[origin.id];\n        delete collapsibleStops[destination.id];\n\n        for (var routeIndex in routes) {\n            routes[routeIndex].stops = collapseStops(routes[routeIndex].stops, collapsibleStops);\n        }\n\n        function countStopFrequencies(routes) {\n            var stopFrequencies = {};\n            for (var routeIndex in routes) {\n                var route = routes[routeIndex];\n                for (var i in route.stops) {\n                    var stopId = route.stops[i];\n                    if (!stopFrequencies[stopId])\n                        stopFrequencies[stopId] = 0;\n                    stopFrequencies[stopId]++;\n                }\n            }\n\n            return stopFrequencies;\n        }\n\n        function findCommonStops(stopFrequencies, routesCount) {\n            var commonStops = {};\n            for (var stopId in stopFrequencies)\n                if (stopFrequencies[stopId] == routesCount)\n                    commonStops[stopId] = true;\n\n            return commonStops;\n        }\n\n        function collapseStops(stops, collapsibleStops) {\n            var collapsed = [];\n            var accumulator;\n\n            for (var i in stops) {\n                var stopId = stops[i];\n                if (i > 0 && i < stops.length - 1 && collapsibleStops[stopId]) {\n                    if (!accumulator) {\n                        accumulator = [];\n                        collapsed.push(accumulator);\n                    }\n                    accumulator.push(stopId);\n                } else {\n                    accumulator = null;\n                    collapsed.push(stopId);\n                }\n            }\n\n            return collapsed;\n        }\n    }\n}]);\n","angular.module('RouteExplorer').controller('SelectStopsController',\n['$scope', '$rootScope', '$location', 'Layout', 'Locale', 'TimeParser',\nfunction($scope, $rootScope, $location, Layout, Locale, TimeParser) {\n    $scope.stops = Layout.getStops();\n    $scope.origin = null;\n    $scope.destination = null;\n    $scope.months = Locale.months;\n\n    var dateRange = Layout.getRoutesDateRange();\n    $scope.periods = generatePeriods(dateRange.min, dateRange.max);\n    $scope.startPeriod = $scope.periods[0];\n    $scope.endPeriod = $scope.periods[0];\n\n    $scope.formValid = function() {\n        return (\n            !!$scope.origin &&\n            !!$scope.destination &&\n            $scope.origin != $scope.destination &&\n            $scope.startPeriod.from <= $scope.endPeriod.to\n        );\n    };\n\n    $scope.stopName = function(stopId) {\n        var stop = Layout.findStop(stopId);\n        if (!stop)\n            return null;\n\n        return stop.name;\n    };\n\n    $scope.goToRoutes = function() {\n        $scope.noRoutes = false;\n        $scope.loading = true;\n        var period = {\n            from: $scope.startPeriod.from,\n            to: $scope.endPeriod.to,\n            end: $scope.endPeriod.end,\n        };\n        var fromDate = period.from;\n        var toDate = period.end;\n        var periodStr = TimeParser.formatPeriod(period);\n        Layout.findRoutesByPeriod($scope.origin.id, $scope.destination.id, fromDate, toDate)\n            .then(function(routes) {\n                if (routes.length === 0) {\n                    $scope.noRoutes = true;\n                } else if (routes.length == 1) {\n                    $location.path('/' + periodStr + '/routes/' + routes[0].id);\n                } else {\n                    $location.path('/' + periodStr + '/select-route/' + $scope.origin.id + '/' + $scope.destination.id);\n                }\n            })\n            .finally(function() {\n                $scope.loading = false;\n            });\n    };\n\n    $scope.dismissError = function() {\n        $scope.noRoutes = false;\n    };\n\n    function generatePeriods(fromDate, toDate) {\n      // fromDate=1970-1-1 due to a data bug. This is a quick temporary workaround\n      if (fromDate.getFullYear() < 2013) fromDate = new Date(2013, 0, 1);\n\n      var periods = [];\n      var start = new Date(fromDate.getFullYear(), fromDate.getMonth(), 1);\n      while (start < toDate) {\n        end = new Date(start.getFullYear(), start.getMonth() + 1, start.getDate());\n        var period = {\n          from: start,\n          to: start,\n          end: end,\n          name: Locale.months[start.getMonth()].name + \" \" + start.getFullYear()\n        };\n        period.toName = Locale.until + period.name;\n        periods.push(period);\n        start = end;\n      }\n      periods.reverse();\n      return periods;\n    }\n}]);\n","angular.module('RouteExplorer').controller('TimesDetailsController',\n    ['$scope', '$route', 'Locale','LocationBinder','Layout',\nfunction($scope, $route, Locale, LocationBinder, Layout) {\n    Layout.then(function(Layout) {\n        $scope.layout = Layout;\n    });\n    $scope.layout = null;\n\n    var statsMap = {};\n    var routeParams = $route.current.params;\n    $scope.stopIds = [parseInt(routeParams.origin), parseInt(routeParams.destination)];\n    LocationBinder.bind($scope, 'selectedDay', 'day', function(val) { return val ? Number(val) : null; });\n    LocationBinder.bind($scope, 'selectedTime', 'time');\n    function formatHour(hour) {\n        return ('0' + hour % 24 + '').slice(-2) + ':00';\n    }\n\n    function formatMonth(date) {\n        return Locale.months[date.getMonth()].name + ' ' + date.getFullYear()\n    }\n\n    function selectedStats() {\n        var stats = getStats($scope.selectedDay, $scope.selectedTime);\n        if (stats)\n          return stats.stops;\n\n        return [];\n    }\n\n    $scope.stopName = function(stopId) {\n        if ($scope.layout) {\n            var stop = $scope.layout.findStop(stopId);\n            if (!stop)\n                return null;\n\n            return stop.name;\n        } else {\n            return null;\n        }\n    };\n\n    $scope.selectedDay = null;\n    $scope.days = Locale.days;\n\n    $scope.selectedTime = null;\n    $scope.times = [];\n\n    $scope.loadStats = function() {\n        var data = $scope.stats;\n        $scope.times = [];\n        var timesMap = {};\n\n        for (var i in data) {\n            var statGroup = data[i];\n            var timeId = statGroup.info.hours == 'all' ? 'all' : statGroup.info.hours[0] + '-' + statGroup.info.hours[1];\n            var dayId = statGroup.info.week_day;\n\n            if (!statsMap[dayId])\n                statsMap[dayId] = {};\n\n            statsMap[dayId][timeId] = statGroup;\n\n            if (timeId != 'all' && !timesMap[timeId]) {\n                var time = {\n                    id: timeId,\n                    from: formatHour(statGroup.info.hours[0]),\n                    to: formatHour(statGroup.info.hours[1])\n                };\n                timesMap[timeId] = time;\n                $scope.times.push(time);\n            }\n        }\n    };\n    $scope.tripCount = function(dayId, timeId) {\n      var stats = getStats(dayId, timeId);\n      if (!stats)\n        return 0;\n\n      return stats.info.num_trips;\n    };\n\n    function getStats(dayId, timeId) {\n      dayId = dayId || 'all';\n      timeId = timeId || 'all';\n      return statsMap[dayId] && statsMap[dayId][timeId] ? statsMap[dayId][timeId] : null;\n    }\n\n    $scope.isTimeEmpty = function(time) {\n        var dayId = $scope.selectedDay || 'all';\n        var timeId = time.id;\n\n        var timeStats = statsMap[dayId] && statsMap[dayId][timeId];\n        if (timeStats && timeStats.info.num_trips > 0)\n            return false;\n\n        return true;\n    };\n\n    $scope.stopStats = function(stopId) {\n        var stats = selectedStats();\n        for (var i in stats) {\n            if (stats[i].stop_id == stopId)\n                return stats[i];\n        }\n        return null;\n    };\n\n    $scope.loadStats();\n}]);\n\n","angular.module('RouteExplorer').directive(\"rexPercentBar\",\n['env',\nfunction(env) {\n    return {\n        restrict: 'E',\n        scope: {\n          value: '=value',\n          type: '=type'\n        },\n        templateUrl: env.baseDir + '/tpls/PercentBar.html'\n      };\n}]);\n","angular.module('RouteExplorer').directive(\"timesDetails\",\n['env','Layout',\nfunction(env, Layout) {\n    return {\n        restrict: 'E',\n        scope: {\n            stats: '='\n        },\n        controller: 'TimesDetailsController',\n        templateUrl: env.baseDir + '/tpls/TimesDetails.html'\n      };\n}]);\n","angular.module('RouteExplorer').filter('duration', function() {\n    return function(seconds) {\n        var negative = false;\n        seconds = Math.trunc(seconds);\n        if (seconds < 0) {\n            negative = true;\n            seconds = -seconds;\n        }\n\n        var minutes = Math.trunc(seconds / 60);\n        seconds -= minutes * 60;\n        var hours = Math.trunc(minutes / 60);\n        minutes -= hours * 60;\n\n        if (seconds < 10) seconds = '0' + seconds;\n        if (minutes < 10 && hours !== 0) minutes = '0' + minutes;\n\n        var res = minutes + ':' + seconds;\n        if (hours !== 0)\n            res = hours + ':' + res;\n\n        if (negative)\n            res = '-' + res;\n\n        return res;\n    };\n});\n","angular.module('RouteExplorer').factory('Layout',\n['$http', '$q', 'TimeParser',\nfunction($http, $q, TimeParser) {\n    var self = this;\n    var stops = [];\n    var stopsMap = {};\n    var routes = [];\n    var routesMap = {};\n\n    var loadedPromise = $q.all([\n        $http.get('/api/v1/stops/')\n            .then(function(response) {\n                stops = response.data.map(function(s) { return {\n                    id: s.stop_id,\n                    name: s.heb_stop_names[0],\n                    names: s.heb_stop_names,\n                    latlon: s.latlon,\n                }; });\n                stops.forEach(function(s) { stopsMap[s.id] = s; });\n            }),\n\n        $http.get('/api/v1/routes/all/')\n            .then(function(response) {\n                routes = response.data.map(function(r) { return {\n                    id: r.id,\n                    stops: r.stop_ids,\n                    count: r.count,\n                    minDate: new Date(r.min_date),\n                    maxDate: new Date(r.max_date)\n                }; });\n\n                routesMap = routes.reduce(function(m, r) { m[r.id] = r; return m; }, {});\n            })\n    ]);\n\n    var findStop = function(stopId) {\n        return stopsMap[stopId] || null;\n    };\n\n    var findStopName = function(stopId) {\n        return findStop(stopId).name;\n    };\n\n    var findRoutes = function(routes, originId, destinationId) {\n        var matchingRoutes = {};\n\n        routes.forEach(function(r) {\n            var originIndex = r.stops.indexOf(originId);\n            var destinationIndex = r.stops.indexOf(destinationId);\n\n            if (originIndex < 0 || destinationIndex < 0)\n                return;\n\n            if (originIndex > destinationIndex)\n                return;\n\n            var routeStops = r.stops;\n            var routeId = r.id;\n\n            if (routeId in matchingRoutes)\n                matchingRoutes[routeId].count += r.count;\n            else {\n                matchingRoutes[routeId] = {\n                    id: routeId,\n                    stops: routeStops,\n                    count: r.count\n                };\n            }\n        });\n\n        matchingRoutes = Object.keys(matchingRoutes).map(function(routeId) { return matchingRoutes[routeId]; });\n        matchingRoutes.sort(function(r1, r2) { return r2.count - r1.count; });\n        return matchingRoutes;\n    };\n\n    var findRoutesByPeriod = function(origin, destination, from, to) {\n        // TODO use minDate and maxDate from our cached routes to avoid the http request\n\n        var d = $q.defer();\n        var matchingRoutes = findRoutes(routes, origin, destination);\n        if (matchingRoutes.length === 0) {\n            d.resolve([]);\n        } else {\n            var fromDate = from;\n            var toDate = to;\n\n            $http.get('/api/v1/routes/all-by-date/', {\n                params: {\n                    from_date: TimeParser.createRequestString(fromDate),\n                    to_date: TimeParser.createRequestString(toDate)\n                }\n            }).then(function(response) {\n                var routesInDate = response.data.map(function(r) {\n                    return {\n                        id: r.id,\n                        stops: r.stop_ids,\n                        count: r.count\n                    };\n                });\n                d.resolve(findRoutes(routesInDate, origin, destination));\n            }, function(response) { d.reject({ 'msg': 'Error fetching routes', 'response': response }); });\n        }\n\n        return d.promise;\n    };\n\n    var findRoute = function(routeId) {\n        return routesMap[routeId] || null;\n    };\n\n    var getRoutesDateRange = function() {\n        var max = new Date(1900, 0, 1);\n        var min = new Date(2100, 0, 1);\n\n        for (var i in routes) {\n            var route = routes[i];\n            if (route.count === 0)\n              continue;\n\n            if (route.minDate && route.minDate < min) min = route.minDate;\n            if (route.maxDate && route.maxDate > max) max = route.maxDate;\n        }\n        return {\n          min: min,\n          max: max\n        };\n    };\n\n    service = {\n        getStops: function() { return stops; },\n        getRoutes: function() { return routes; },\n        findRoute: findRoute,\n        findStop: findStop,\n        findStopName: findStopName,\n        findRoutes: function(origin, destination) { return findRoutes(routes, origin, destination); },\n        findRoutesByPeriod: findRoutesByPeriod,\n        getRoutesDateRange: getRoutesDateRange\n    };\n\n    return loadedPromise.then(function() { return service; });\n}]);\n","angular.module('RouteExplorer').constant('Locale', {\n  months: [\n      'ינואר',\n      'פברואר',\n      'מרץ',\n      'אפריל',\n      'מאי',\n      'יוני',\n      'יולי',\n      'אוגוסט',\n      'ספטמבר',\n      'אוקטובר',\n      'נובמבר',\n      'דצמבר'\n  ].map(function(v, i) { return { id: i + 1, name: v }; }),\n\n  days: [\n      { abbr: 'א', name: 'ראשון', id: 1 },\n      { abbr: 'ב', name: 'שני', id: 2 },\n      { abbr: 'ג', name: 'שלישי', id: 3 },\n      { abbr: 'ד', name: 'רביעי', id: 4 },\n      { abbr: 'ה', name: 'חמישי', id: 5 },\n      { abbr: 'ו', name: 'שישי', id: 6 },\n      { abbr: 'ש', name: 'שבת', id: 7 }\n  ],\n  until: 'עד ל'\n});\n","angular.module('RouteExplorer').factory('LocationBinder',\n['$location',\nfunction($location) {\n    return {\n        bind: function(scope, scopeProperty, locationProperty, parser, formatter) {\n            scope[scopeProperty] = $location.search()[locationProperty] || null;\n\n            scope.$watch(scopeProperty, function(value) {\n                if (formatter)\n                    value = formatter(value);\n\n                $location.search(locationProperty, value);\n            });\n\n            scope.$watch(function() { return $location.search()[locationProperty] || null; }, function(value) {\n                if (parser)\n                    value = parser(value);\n\n                scope[scopeProperty] = value;\n            });\n        }\n    };\n}]);\n","angular.module('RouteExplorer').factory('TimeParser',\n[\nfunction() {\n    function createRequestString(date, sep) {\n        sep = sep || '/';\n        var dd = date.getDate().toString();\n        var mm = (date.getMonth()+1).toString();\n        var yyyy = date.getFullYear().toString();\n        return dd + sep + mm + sep + yyyy;\n    }\n\n    function parseMonth(monthString) {\n        var year = Number(monthString.substr(0, 4));\n        var month = Number(monthString.substr(4, 2));\n        return new Date(year, month - 1, 1);\n    }\n\n    function parsePeriod(periodString) {\n        var parts = periodString.split('-', 2);\n        var from = parseMonth(parts[0]);\n        var to = parts.length > 1 ? parseMonth(parts[1]) : from;\n        var end = new Date(to.getFullYear(), to.getMonth() + 1, 1);\n        return { from: from, to: to, end: end };\n    }\n\n    function formatMonth(date) {\n        return date.getFullYear() + ('0' + (date.getMonth() + 1)).slice(-2);\n    }\n\n    function formatPeriod(period) {\n        var f = formatMonth(period.from);\n        if (period.from < period.to)\n            f += '-' + formatMonth(period.to);\n\n        return f;\n    }\n\n    return {\n        createRequestString: createRequestString,\n        parseMonth: parseMonth,\n        parsePeriod: parsePeriod,\n        formatMonth: formatMonth,\n        formatPeriod: formatPeriod\n    }\n}]);\n"],"sourceRoot":"/source/"}